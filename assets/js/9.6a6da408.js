(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{194:function(r,_,t){"use strict";t.r(_);var a=t(6),v=Object(a.a)({},(function(){var r=this,_=r.$createElement,t=r._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"核心技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心技术"}},[r._v("#")]),r._v(" 核心技术")]),r._v(" "),t("h2",{attrs:{id:"springboot框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springboot框架"}},[r._v("#")]),r._v(" SpringBoot框架")]),r._v(" "),t("h3",{attrs:{id:"_1、介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、介绍"}},[r._v("#")]),r._v(" 1、介绍")]),r._v(" "),t("p",[t("strong",[r._v("Spring Boot")]),r._v("是一款开箱即用框架，提供各种默认配置来简化项目配置，让我们的Spring应用变的更轻量化、更快的入门。\n在主程序执行main函数就可以运行。你也可以打包你的应用为jar并通过使用java -jar来运行你的Web应用。")]),r._v(" "),t("p",[r._v("它遵循 "),t("strong",[r._v('"约定优先于配置"')]),r._v(" 的原则。\n使用SpringBoot只需很少的配置，大部分的时候直接使用默认的配置即可。可以与Spring Cloud的微服务无缝结合。")]),r._v(" "),t("p",[t("strong",[r._v("Spring Boot2.0")]),r._v(" 环境要求必须是jdk8或以上版本，Tomcat8或以上版本")]),r._v(" "),t("h3",{attrs:{id:"_2、优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、优点"}},[r._v("#")]),r._v(" 2、优点")]),r._v(" "),t("ul",[t("li",[r._v("使"),t("strong",[r._v("编码")]),r._v("变得简单： 推荐使用注解;")]),r._v(" "),t("li",[r._v("使"),t("strong",[r._v("配置")]),r._v("变得简单： 自动配置、快速构建项目、快速集成新技术的能力，没有冗余代码生成和XML配置的要求;")]),r._v(" "),t("li",[r._v("使"),t("strong",[r._v("部署")]),r._v("变得简单： 内嵌Tomcat、Jetty、Undertow等web容器，无需以war包形式部署;")]),r._v(" "),t("li",[r._v("使"),t("strong",[r._v("监控")]),r._v("变得简单： 自带项目监控;")])]),r._v(" "),t("h2",{attrs:{id:"shiro安全控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shiro安全控制"}},[r._v("#")]),r._v(" Shiro安全控制")]),r._v(" "),t("h3",{attrs:{id:"_1、介绍-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、介绍-2"}},[r._v("#")]),r._v(" 1、介绍")]),r._v(" "),t("p",[t("strong",[r._v("Apache Shiro")]),r._v("是Java的一个安全框架。"),t("br"),r._v("\nShiro可以帮助我们完成：认证、授权、加密、会话管理、与Web集成、缓存等。"),t("br"),r._v("\n其不仅可以用在 "),t("strong",[r._v("JavaSE")]),r._v(" 环境，也可以用在 "),t("strong",[r._v("JavaEE")]),r._v(" 环境。")]),r._v(" "),t("h3",{attrs:{id:"_2、优点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、优点-2"}},[r._v("#")]),r._v(" 2、优点")]),r._v(" "),t("ul",[t("li",[r._v("易于理解的 "),t("strong",[r._v("Java Security API")]),r._v(";")]),r._v(" "),t("li",[r._v("简单的身份认证，支持多种数据源;")]),r._v(" "),t("li",[r._v("对角色的简单的授权，支持细粒度的授权;")]),r._v(" "),t("li",[r._v("不跟任何的框架或者容器捆绑，可以独立运行.")])]),r._v(" "),t("h3",{attrs:{id:"_3、特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、特性"}},[r._v("#")]),r._v(" 3、特性")]),r._v(" "),t("p",[t("strong",[r._v("(1) Uthentication身份认证/登录：")]),t("br"),r._v("\n   验证用户是不是拥有相应的身份;")]),r._v(" "),t("p",[t("strong",[r._v("(2) Authorization授权：")]),t("br"),r._v("\n   即验证权限，验证某个已认证的用户是否拥有某个权限，即判断用户是否能做事情;")]),r._v(" "),t("p",[t("strong",[r._v("(3) SessionManagement会话管理：")]),t("br"),r._v("\n   即用户登录后就是一次会话，在没有退出之前，它的所有信息都在会话中;")]),r._v(" "),t("p",[t("strong",[r._v("(4) Cryptography加密：")]),t("br"),r._v("\n   保护数据的安全性，如密码加密存储到数据库，而不是明文存储;")]),r._v(" "),t("p",[t("strong",[r._v("(5) Caching缓存：")]),t("br"),r._v("\n   比如用户登录后，其用户信息，拥有的角色/权限不必每次去查，提高效率;")]),r._v(" "),t("p",[t("strong",[r._v("(6) ConcurrencyShiro：")]),t("br"),r._v("\n   支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去;")]),r._v(" "),t("p",[t("strong",[r._v("(7) Testing：")]),t("br"),r._v("\n   提供测试支持;")]),r._v(" "),t("p",[t("strong",[r._v("(8) RunAs：")]),t("br"),r._v("\n   允许一个用户假装为另一个用户（如果他们允许）的身份进行访问;")]),r._v(" "),t("p",[t("strong",[r._v("(9) RememberMe记住我：")]),t("br"),r._v("\n   这是非常常见的功能，即一次登录后，下次再来的话不用登录了.")]),r._v(" "),t("h3",{attrs:{id:"_4、架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、架构"}},[r._v("#")]),r._v(" 4、架构")]),r._v(" "),t("ul",[t("li",[t("p",[t("strong",[r._v("Subject主体：")]),t("br"),r._v("\n代表了当前的“用户”，这个用户不一定是一个具体的人，与当前应用交互的任何东西都是Subject，如网络爬虫， 机器人等；即一个抽象概念；所有Subject都绑定到SercurityManager，与Subject的所有交互都会委托给SecurityManager；可以把Subject认为是一个门面；SecurityManager才是实际的执行者")])]),r._v(" "),t("li",[t("p",[t("strong",[r._v("SecurityManage安全管理器：")]),t("br"),r._v("\n即所有与安全有关的操作都会与SecurityManager交互；且它管理着所有Subject； 可以看出它是Shiro的核心，它负责与后边介绍的其他组件进行交互")])]),r._v(" "),t("li",[t("p",[t("strong",[r._v("Realm域：")]),t("br"),r._v("\nShiro从Realm获取安全数据（如用户，角色，权限），就是说SecurityManager要验证用户身份， 那么它需要从Realm获取相应的用户进行比较以确定用户身份是否合法；也需要从Realm得到用户相应的角色/权限进行验证用户是否能进行操作；可以有1个或多个Realm，我们一般在应用中都需要实现自己的Realm")])]),r._v(" "),t("li",[t("p",[t("strong",[r._v("SessionManager：")]),t("br"),r._v("\n如果写过Servlet就应该知道Session的概念，Session需要有人去管理它的生命周期，这个组件就是SessionManager")])]),r._v(" "),t("li",[t("p",[t("strong",[r._v("SessionDAO：")]),t("br"),r._v("\n大家都用过，数据库访问对象，用于会话的CRUD，比如我们想把Session保存到数据库，那么可以实现自己的SessionDAO，也可以写入缓存，以提高性能")])]),r._v(" "),t("li",[t("p",[t("strong",[r._v("CacheManager：")]),t("br"),r._v("\n缓存控制器，来管理如用户，角色，权限等的缓存的；因为这些数据基本上很少去改变，放到缓存中后可以提高访问的性能")])])]),r._v(" "),t("p",[r._v("应用代码通过Subject来进行认证和授权，而Subject又委托给SecurityManager；"),t("br"),r._v("\n我们需要给Shrio的SecurityManager注入Realm，从而让SecurityManager能得到合法的用户及其权限进行判断。"),t("br"),r._v("\nShiro不提供维护用户/权限，而是通过Realm让开发人员自己注入。"),t("br"),r._v("\nShiro不会去维护用户，维护权限，这些需要自己去设计/提供；然后通过响应的接口注入给Shiro即可。")]),r._v(" "),t("h2",{attrs:{id:"thymeleaf模板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#thymeleaf模板"}},[r._v("#")]),r._v(" Thymeleaf模板")]),r._v(" "),t("h4",{attrs:{id:"_1、介绍-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、介绍-3"}},[r._v("#")]),r._v(" 1、介绍")]),r._v(" "),t("p",[t("strong",[r._v("Thymeleaf")]),r._v("是一个用于Web和独立Java环境的模板引擎，能够处理HTML、XML、JavaScript、CSS甚至纯文本。能轻易的与Spring MVC等Web框架进行集成作为Web应用的模板引擎。")]),r._v(" "),t("p",[r._v("与其它模板引擎（比如FreeMaker）相比，Thymeleaf最大的特点是："),t("br"),r._v("\n能够直接在浏览器中打开并正确显示模板页面，而不需要启动整个Web应用（更加方便前后端分离，比如方便类似VUE前端设计页面），优于JSP。")]),r._v(" "),t("p",[t("strong",[r._v("Thymeleaf 3.0")]),r._v("是一个完全彻底重构的模板引擎，极大的减少内存占用和提升性能和并发性，避免v2.1版因大量的输出标记的集合产生的资源占用。")]),r._v(" "),t("p",[r._v("Thymeleaf 3.0放弃了大多数面向DOM的处理机制，变成了一个基于事件的模板处理器，它通过处理模板标记或文本并立即生成其输出，甚至在新事件之前响应模板解析器/缓存事件。")]),r._v(" "),t("p",[t("strong",[r._v("Thymeleaf是Spring Boot官方的推荐使用模板。")])]),r._v(" "),t("h4",{attrs:{id:"_2、优点-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、优点-3"}},[r._v("#")]),r._v(" 2、优点")]),r._v(" "),t("ul",[t("li",[r._v("国际化支持非常简单。")]),r._v(" "),t("li",[r._v("语法简单，功能强大，内置大量常用功能，使用非常方便，可以很好的和Spring集成；")]),r._v(" "),t("li",[r._v("静态html嵌入标签属性，浏览器可以直接打开模板文件，便于前后端联调；")]),r._v(" "),t("li",[r._v("Spring Boot 官方推荐，用户群广。")])])])}),[],!1,null,null,null);_.default=v.exports}}]);